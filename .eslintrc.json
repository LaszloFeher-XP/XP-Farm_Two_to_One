{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": [
        "eslint-plugin-unicorn",
        "eslint-plugin-no-null"
      ],
      "rules": {
        "@angular-eslint/component-max-inline-declarations": [
          "warn",
          {
            "animations": 1,
            "styles": 1,
            "template": 1
          }
        ],
        "@angular-eslint/component-selector": [
          "warn",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "warn",
          {
            "type": "element",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-input-rename": "off",
        "@angular-eslint/no-output-rename": "off",
        "@angular-eslint/no-pipe-impure": "warn",
        "@angular-eslint/no-queries-metadata-property": "warn",
        "@angular-eslint/pipe-prefix": [
          "warn",
          {
            "prefixes": [
              "app"
            ]
          }
        ],
        "@angular-eslint/prefer-output-readonly": "warn",
        "@angular-eslint/relative-url-prefix": "warn",
        "@angular-eslint/use-pipe-decorator": "warn",
        "@typescript-eslint/array-type": [
          "warn",
          {
            "default": "array"
          }
        ],
        "@typescript-eslint/await-thenable": "warn",
        "@typescript-eslint/ban-types": [
          "warn",
          {
            "types": {
              "Object": {
                "message": "Avoid using the `Object` type. Did you mean `object`?"
              },
              "Function": {
                "message": "Avoid using the `Function` type. Prefer a specific function type, like `() => void`, or use `ts.AnyFunction`."
              },
              "Boolean": {
                "message": "Avoid using the `Boolean` type. Did you mean `boolean`?"
              },
              "Number": {
                "message": "Avoid using the `Number` type. Did you mean `number`?"
              },
              "String": {
                "message": "Avoid using the `String` type. Did you mean `string`?"
              }
            },
            "extendDefaults": false
          }
        ],
        "@typescript-eslint/consistent-type-assertions": "off",
        "@typescript-eslint/consistent-type-definitions": "warn",
        "@typescript-eslint/explicit-member-accessibility": [
          "warn",
          {
            "accessibility": "no-public"
          }
        ],
        "@typescript-eslint/no-empty-function": "warn",
        "@typescript-eslint/no-empty-interface": "off",
        "@typescript-eslint/no-floating-promises": [
          "warn",
          {
            "ignoreVoid": false
          }
        ],
        "@typescript-eslint/no-for-in-array": "warn",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/no-require-imports": "warn",
        "@typescript-eslint/no-this-alias": "warn",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "warn",
        "@typescript-eslint/no-unnecessary-type-assertion": "warn",
        "no-unused-vars": "off",
        "@typescript-eslint/no-unused-vars": "warn",
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": [
          "warn"
        ],
        "@typescript-eslint/no-var-requires": "warn",
        "@typescript-eslint/prefer-readonly": "warn",
        "@typescript-eslint/promise-function-async": "off",
        "require-await": "off",
        "@typescript-eslint/require-await": "warn",
        "arrow-parens": [
          "warn",
          "as-needed"
        ],
        "comma-dangle": [
          "warn",
          {
            "objects": "always-multiline",
            "arrays": "always-multiline",
            "functions": "never"
          }
        ],
        "guard-for-in": "off",
        "import/no-deprecated": "warn",
        "import/no-unassigned-import": "warn",
        "import/order": [
          "warn",
          {
            "alphabetize": {
              "caseInsensitive": true
            },
            "newlines-between": "never"
          }
        ],
        "sort-imports": [
          "warn",
          {
            "ignoreCase": true,
            "ignoreDeclarationSort": true
          }
        ],
        "linebreak-style": [
          "warn",
          "unix"
        ],
        "max-classes-per-file": [
          "warn",
          1
        ],
        "max-len": [
          "warn",
          {
            "code": 160
          }
        ],
        "max-lines": [
          "warn",
          350
        ],
        "no-duplicate-case": "warn",
        "no-duplicate-imports": "warn",
        "no-empty": "warn",
        "no-invalid-this": "off",
        "@typescript-eslint/no-invalid-this": "warn",
        "no-irregular-whitespace": [
          "warn",
          {
            "skipComments": true,
            "skipRegExps": true,
            "skipTemplates": true
          }
        ],
        "no-magic-numbers": "off",
        "@typescript-eslint/no-magic-numbers": [
          "warn",
          {
            "ignore": [
              -1,
              0,
              1,
              2
            ],
            "ignoreReadonlyClassProperties": true
          }
        ],
        "no-multiple-empty-lines": [
          "warn",
          {
            "max": 2
          }
        ],
        "no-null/no-null": "off",
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": [
          "warn"
        ],
        "no-sequences": "warn",
        "no-sparse-arrays": "warn",
        "no-template-curly-in-string": "warn",
        "no-useless-constructor": "off",
        "@typescript-eslint/no-useless-constructor": "warn",
        "no-void": "off",
        "prefer-template": "warn",
        "unicorn/filename-case": [
          "warn",
          {
            "case": "kebabCase"
          }
        ],
        "valid-typeof": "warn",
        "yoda": "warn",
        "no-underscore-dangle": "off",
        "@typescript-eslint/member-delimiter-style": [
          "warn",
          {
            "multiline": {
              "delimiter": "comma",
              "requireLast": true
            },
            "singleline": {
              "delimiter": "comma",
              "requireLast": false
            },
            "overrides": {
              "interface": {
                "multiline": {
                  "delimiter": "semi",
                  "requireLast": true
                },
                "singleline": {
                  "delimiter": "semi",
                  "requireLast": true
                }
              }
            }
          }
        ],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "property",
            "modifiers": [
              "readonly",
              "static"
            ],
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": "interface",
            "format": [
              "PascalCase"
            ],
            "custom": {
              "regex": "^I[A-Z]",
              "match": false
            }
          }
        ],
        "prefer-const": "warn",
        "no-restricted-imports": [
          "warn",
          "rxjs/Rx"
        ],
        "@typescript-eslint/member-ordering": [
          "warn",
          {
            "default": [
              "public-static-field",
              "static-field",
              "instance-field",
              "constructor",
              "public-static-method",
              "static-method",
              "public-instance-method",
              "instance-method"
            ]
          }
        ],
        "no-console": "warn",
        "no-restricted-syntax": [
          "warn",
          {
            "selector": "CallExpression[callee.object.name='console'][callee.property.name=/^(log|warn|error|info|trace)$/]",
            "message": "No console call allowed"
          }
        ],
        "@typescript-eslint/no-non-null-assertion": "warn",
        "no-fallthrough": "warn",
        "quote-props": [
          "warn",
          "as-needed"
        ],
        "sort-keys": "off",
        "quotes": [
          "warn",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "@angular-eslint/no-output-on-prefix": "warn",
        "@angular-eslint/use-pipe-transform-interface": "warn",
        "@angular-eslint/component-class-suffix": "warn",
        "@angular-eslint/directive-class-suffix": "warn",
        "curly": "warn",
        "eqeqeq": [
          "warn",
          "smart"
        ],
        "no-restricted-globals": [
          "warn",
          "setInterval"
        ],
        "no-param-reassign": [
          "warn",
          {
            "props": false
          }
        ],
        "prefer-arrow-callback": "warn",
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/typedef": [
          "warn",
          {
            "arrayDestructuring": true,
            "arrowParameter": true,
            "memberVariableDeclaration": true,
            "objectDestructuring": true,
            "parameter": true,
            "propertyDeclaration": true,
            "variableDeclaration": true,
            "variableDeclarationIgnoreFunction": true
          }
        ],
        "@typescript-eslint/unified-signatures": "warn",
        "no-bitwise": "warn",
        "no-cond-assign": "warn",
        "constructor-super": "warn",
        "no-this-before-super": "warn",
        "no-eval": "warn",
        "template-curly-spacing": [
          "warn",
          "never"
        ],
        "no-shadow": "warn",
        "no-throw-literal": "warn",
        "no-unsafe-finally": "warn",
        "no-unused-expressions": "off",
        "@typescript-eslint/no-unused-expressions": "warn",
        "no-var": "warn",
        "no-unneeded-ternary": "warn",
        "use-isnan": "warn",
        "spaced-comment": "warn",
        "no-undef-init": "warn",
        "one-var": [
          "warn",
          "never"
        ],
        "no-else-return": "warn",
        "eol-last": [
          "warn",
          "always"
        ],
        "new-parens": "warn",
        "no-trailing-spaces": "warn",
        "semi": "warn",
        "space-before-blocks": "warn",
        "space-infix-ops": "warn",
        "space-in-parens": [
          "warn",
          "never"
        ],
        "semi-spacing": "warn",
        "object-curly-spacing": [
          "warn",
          "always"
        ],
        "key-spacing": "warn",
        "computed-property-spacing": [
          "warn",
          "never"
        ],
        "comma-spacing": [
          "warn",
          {
            "before": false,
            "after": true
          }
        ],
        "block-spacing": "warn",
        "arrow-spacing": "warn",
        "@angular-eslint/contextual-lifecycle": "warn",
        "@angular-eslint/use-lifecycle-interface": "warn",
        "@angular-eslint/no-conflicting-lifecycle": "warn",
        "@angular-eslint/no-host-metadata-property": "warn",
        "@angular-eslint/no-inputs-metadata-property": "warn",
        "@angular-eslint/no-outputs-metadata-property": "warn",
        "@typescript-eslint/no-dynamic-delete": "warn",
        "@typescript-eslint/no-misused-new": "warn"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}